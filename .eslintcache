[{"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\App.tsx":"1","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\styles\\global.ts":"2","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\index.tsx":"3","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"4","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"5","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Button\\index.tsx":"6","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Input\\index.tsx":"7","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Input\\styles.ts":"8","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Button\\styles.ts":"9","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"11","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\utils\\getValidationErrors.ts":"12","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Tooltip\\index.tsx":"13","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Tooltip\\styles.ts":"14","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\services\\api.ts":"15","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"16","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"17","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\auth.tsx":"18","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\index.tsx":"19","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\toast.tsx":"20","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"21","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"22","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\routes\\index.tsx":"23","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"24","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\routes\\Route.tsx":"25","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx":"26","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts":"27","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx":"28","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts":"29","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Dashboard\\styles.ts":"30","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Profile\\index.tsx":"31","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Profile\\styles.ts":"32"},{"size":356,"mtime":1610750650179,"results":"33","hashOfConfig":"34"},{"size":462,"mtime":1610647470457,"results":"35","hashOfConfig":"34"},{"size":198,"mtime":1610647463362,"results":"36","hashOfConfig":"34"},{"size":2705,"mtime":1612199820784,"results":"37","hashOfConfig":"34"},{"size":1492,"mtime":1610751560199,"results":"38","hashOfConfig":"34"},{"size":380,"mtime":1612201121024,"results":"39","hashOfConfig":"34"},{"size":1680,"mtime":1612371866341,"results":"40","hashOfConfig":"34"},{"size":1107,"mtime":1610669799368,"results":"41","hashOfConfig":"34"},{"size":381,"mtime":1610653832057,"results":"42","hashOfConfig":"34"},{"size":2852,"mtime":1612370310151,"results":"43","hashOfConfig":"34"},{"size":1493,"mtime":1610751772312,"results":"44","hashOfConfig":"34"},{"size":337,"mtime":1610666802105,"results":"45","hashOfConfig":"34"},{"size":355,"mtime":1610668622581,"results":"46","hashOfConfig":"34"},{"size":755,"mtime":1610669997759,"results":"47","hashOfConfig":"34"},{"size":116,"mtime":1610673870763,"results":"48","hashOfConfig":"34"},{"size":784,"mtime":1610749516569,"results":"49","hashOfConfig":"34"},{"size":162,"mtime":1610736800537,"results":"50","hashOfConfig":"34"},{"size":2145,"mtime":1612375530332,"results":"51","hashOfConfig":"34"},{"size":272,"mtime":1610733181436,"results":"52","hashOfConfig":"34"},{"size":1459,"mtime":1610736328407,"results":"53","hashOfConfig":"34"},{"size":1188,"mtime":1612201159453,"results":"54","hashOfConfig":"34"},{"size":1189,"mtime":1612201156366,"results":"55","hashOfConfig":"34"},{"size":800,"mtime":1612370860014,"results":"56","hashOfConfig":"34"},{"size":7318,"mtime":1612370060491,"results":"57","hashOfConfig":"34"},{"size":801,"mtime":1610755448339,"results":"58","hashOfConfig":"34"},{"size":2716,"mtime":1612201118939,"results":"59","hashOfConfig":"34"},{"size":1492,"mtime":1612199471814,"results":"60","hashOfConfig":"34"},{"size":2940,"mtime":1612202866167,"results":"61","hashOfConfig":"34"},{"size":1492,"mtime":1612201398192,"results":"62","hashOfConfig":"34"},{"size":4634,"mtime":1612370174764,"results":"63","hashOfConfig":"34"},{"size":5064,"mtime":1612378418635,"results":"64","hashOfConfig":"34"},{"size":1799,"mtime":1612374155360,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1ietk8s",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\App.tsx",[],["132","133","134","135","136"],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\routes\\Route.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Profile\\index.tsx",["137"],"import React, { ChangeEvent, useCallback, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiUser, FiMail, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AvatarInput } from './styles';\nimport { useAuth } from '../../hooks/auth';\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite um e-mail válido')\n            .required('E-mail obrigatório'),\n          old_password: Yup.string(),\n          password: Yup.string().when('old_password', {\n            is: (val: string) => !!val.length,\n            then: Yup.string().required('Campo obrigatório'),\n            otherwise: Yup.string(),\n          }),\n          password_confirmation: Yup.string()\n            .when('old_password', {\n              is: (val: string) => !!val.length,\n              then: Yup.string().required('Campo obrigatório'),\n              otherwise: Yup.string(),\n            })\n            .oneOf([Yup.ref('password')], 'Confirmação incorreta'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const {\n          name,\n          email,\n          old_password,\n          password,\n          password_confirmation,\n        } = data;\n\n        const formData = {\n          name,\n          email,\n          ...(old_password\n            ? {\n                old_password,\n                password,\n                password_confirmation,\n              }\n            : {}),\n        };\n\n        const response = await api.put('/profile', formData);\n\n        updateUser(response.data);\n\n        history.push('/dashboard');\n\n        addToast({\n          type: 'success',\n          title: 'Perfil Atualizado',\n          description: 'Suas informações foram atualizadas com sucesso',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na atualização',\n          description: 'Ocorreu um erro ao atualizar perfil, tente novamente',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  const handleAvatarChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const data = new FormData();\n\n        data.append('avatar', e.target.files[0]);\n\n        api.patch('/users/avatar', data).then(response => {\n          updateUser(response.data);\n\n          addToast({\n            type: 'success',\n            title: 'Avatar atualizado',\n          });\n        });\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n      <Content>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{\n            name: user.name,\n            email: user.email,\n          }}\n        >\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n\n          <h1>Meu perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            containerStyle={{ marginTop: 24 }}\n            name=\"old_password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha atual\"\n          />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova senha\"\n          />\n          <Input\n            name=\"password_confirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmação de senha\"\n          />\n\n          <Button type=\"submit\">Confirmar mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\savio\\Desktop\\Curso OmniStack\\aulas\\gobarber-web\\src\\pages\\Profile\\styles.ts",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":110,"column":5,"nodeType":"150","endLine":110,"endColumn":24,"suggestions":"151"},"lines-around-directive",["152"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'updateUser'. Either include it or remove the dependency array.","ArrayExpression",["153"],"padding-line-between-statements",{"desc":"154","fix":"155"},"Update the dependencies array to be: [addToast, history, updateUser]",{"range":"156","text":"157"},[3092,3111],"[addToast, history, updateUser]"]